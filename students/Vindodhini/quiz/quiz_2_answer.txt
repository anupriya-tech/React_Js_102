ques 1:

var student = {
  name: "John",
  getName: function(){console.log("student"+this.name);}
}
var employee = {
  name: "Tom",
  getName: function(){console.log("employee"+this.name);}
}
var run = student.getName.bind(employee);
run();

output: studentTom

explanation: binding method is used for objects

ques 2:

x = 10;
function foo(x){
  x = 20;
  delete x;
  return x;
}
console.log(foo(5));

output : 20

explanation : delete does not affect the local variable

ques 3 : 

function foo(){
  var a;
  console.log(a);
  a = 10;
}
foo();

output : undefined

explanation : didn't assign a value before console 


ques 4 : 

function evenodd(n){
  return n%2 != 0;
}
myarray = [1,2,3,4,5];

console.log(myarray.filter(evenodd));


output : [1,3,5]


explanation: if you divide any number n by 2, you get either 0 or 1 or -1. 0 would mean it's even. Anything else would mean it's odd.if we get 0 remainder that number will filtered.

ques 5 :


var myArray = ['80', '90', 100];

function compare(a,b){
  return a - b;
}

var a = myArray.sort();
var b = myArray.sort(compare);
console.log(a=b);

output : ['80', '90', 100]

explanation : default sort order is ascending 


ques 6:

myFruits = ['apple','banana','orange'];
const [a, ...b] = myFruits;
console.log(a);
console.log(b);

output : apple
[ 'banana', 'orange' ]

explanation : gathers the rest of the list of arguments into an array

ques 7:

function printMe(){
  console.log("hello from function.");
}
var obj = new PrintMeToo();
obj.printMe();

class PrintMeToo{
  printMe(){
    console.log("hello from class");
  }
}

output : ReferenceError: Cannot access 'PrintMeToo' before initialization
    at /script.js:107:11

ques 8:

   <a href="https://www.google.com" onClick="console.log('link clicked');">Link one</a>

    <a href="https://www.google.com" onClick="console.log('link clicked'); return false">link two</a>

output: link clicked

explation : 