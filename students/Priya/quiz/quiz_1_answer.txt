1)     <a href="https://www.google.com" onclick="console.log('link Clicked');">Link One</a> 
       <a href="https://www.google.com" onclick="console.log('link Clicked'); return false ">Link One</a>
answer : The first link will be open because it is directly console.log on click.
         The second  link is not redirecting the google link because it is prevent redirect due to return false.


2) var student = {
    name: "John",
    getName: function(){
        console.log("student" + this.name);
    }
}

var employee = {
    name: "Tom",
    getName: function(){
        console.log("employee" + this.name);
    }
}

var run = student.getName.bind(employee);
run();

The output will be studentTom because Bind method is refering by there object with object value.

3) x = 10;

function foo(x){
   x=20;
   delete x;
   return x;
}

console.log(foo(5));


The output will be 20 because in the first x assigned with 10 which is global so when its coming to function code then
 x is assigned by 20 . so 20 will reassigned to the global x then its return x as a output.

 4) 
function foo(){
    var a;
    console.log(a);
    a=10;
}

foo();

 
  The output will be undefined because variable declared but not assigned the value and its console.log before assigned we cannot do console

 5) function evenodd (n){
    return n%2 !== 0;
}

myarray =[1,2,3,4,5];
console.log (myarray.filter(evenodd));
 
 
 The output will be 1,3,5 because here filter method is returning the variable of index of array element.

 6) var myarray =['80','90', 100];

function compare (a,b){
    return a-b ;
}

var a = myArray.sort();
var b = myArray.sort(compare);
console.log(a===b);

Not understanding

 7) myFruits = ['apple' , 'banana' , 'orange'];
const [a , ...b] = myFruits;

console.log(a);
console.log(b);
  
 The output - here its destructuring the array element 

 8) printMe();

function printMe(){
    console.log("hello from function.");
}

var obj = new PrintMeToo();
obj.printMe();

class PrintMeToo{
    printMe(){
        console.log("hello from class.");
    }
}
 
 
 
 The output will be hello from function. because first function is calling  here

