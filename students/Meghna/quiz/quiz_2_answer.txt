101)Which Link will Open "www.google.com" and why?

<a href="https://www.google.com" onClick="console.log('link clicked');">Link One</a>
<a href="https://www.google.com" onClick="console.log('link clicked'); return false">Link Two</a>

answer: "Link One"

Explanation: When we have "href" and "onclick" attributes in "a" Tag,
frist it will excute onclick method if it return true or doesn't retrun "anyhing" will be considered as true it will excute "href".
if it return false it will excute href,so in "Link Two" is not excuted as it is returining false,
"Link One" href is excuted. 

102)var student = {
name: "john",
getName : function(){
  console.log("student "+this.name);
  }
}

var employee = {
name: "tom",
getName : function(){
console.log("employee "+this.name);}
}

var run = student.getName.bind(employee);
run();

Answer: "student tom"

Explanation:Here we are creating two objects,student and employee.
The bind method returns copy of student getname function with employee object values.
when we call run method it has  student getname function with the employee this values,
i.e, //console.log("student" + this.name); => this.name = "tom" =>student tom.

103)x = 10;
function foo(x){
x=20;
delete x;
return x;
}
console.log(foo(5));

Answer:"20"

Explanation: As we are not defined variable scope it is defalut to var,delete operator will not variables with globalscope that's x is 20


104)function foo(){
var a;
console.log(a);
a=10;
}
foo();

Answer:"undefined"

Explanation:Inside function variable "a" is used before defining it that's why a is undefined.


105)function evenodd(n){
return n%2 != 0;
}
myarray = [1,2,3,4,5];
console.log(myarray.filter(evenodd));

Answer:[1,3,5]

Explanation:The filter method returns a new array with the all elements passsed the test provided by the function.
Inside of function we are returning odd numbers,so filter function create a array with the all returned odd numbres.

106)var myArray=['80', '90', '100'];
function compare(a,b){
  return a-b;
}
var a = myArray.sort();
var b = myArray.sort(compare);
console.log(a==b);

Answer:"true"

Explanation:"myArray.sort()" function return the array in asscending order.
"myArray.sort(compare)" here we are passing a compare function to sort so it will do a-b that is 80-90 the result is -10 so 80 will considerd as small value than b
As the both the array are same it will return true.

107)myFruits = ['apple','banana','orange'];
const[a,...b] = myFruits;
console.log(a);
console.log(b);

Answer: apple
[ 'banana', 'orange' ]

Explanation:Frist element myfruits[0] will assigned as "variable" to a,
then after the "spread operator" returns a new "array" with the remaning elements assigned to b.

108)printMe();
function printMe(){
console.log("hello from function.")
}
var obj = new PrintMeToo();
obj.printMe();
class PrintMeToo{
  printMe(){
console.log("hello from class.")
  }
}

Answer: will be geeting the error when calling the class method using object,
because we created object before the class defanation.