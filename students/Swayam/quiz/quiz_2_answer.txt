1) Quiz 1
Code:
//Which link will open "Google" and why?
<a href="https://www.google.co.in" onClick="console.log('link clicked');">Link One</a>
<a href="https://www.google.com" onClick="console.log('link clicked'); return false">Link Two</a>
Output: Link One
Description: Link One will be working. Link Two does not work as return false stops the browser execution process.


2) Quiz 2
Code:
var student = {
  name: "John",
  getName: function(){console.log("student "+this.name);}
}
var employee = {
  name: "Tom",
  getName: function(){console.log("employee "+this.name);}
}

var run = student.getName.bind(employee);
run();
Output: student Tom


3) Quiz 3
Code:
x = 10;
function foo(x){
  x = 20;
  delete x;
  return x;
}
console.log(foo(5));
Output:20
Description: 'delete' operator delete the properties of an object. and x is a global variable not an object. so 'delete x' does not execute.


4) Quiz 4
Code:
function foo(){
  var a;
  console.log(a);
  a=10;
}
foo(5);
Output:undefined
Description: variable a is declared but not assigned any values. so console.log(a) gives a result as undefined.


5) Quiz 5
Code:
function evenodd(n){
    return n%2 != 0 ;
}
myarray = [1,2,3,4,5];
console.log(myarray.filter(evenodd));
Output:[ 1, 3, 5 ]
Description: filter() creates a new array with the given condition inside it.


6) Quiz 6
Code:
var myArray = ['80','90',100];
function compare(a, b){
  return a - b;
} 
var a = myArray.sort();
var b = myArray.sort(compare);
console.log(a==b);
Output: true
Description: 


7) Quiz 7
Code:
myFruits = ['apple', 'banana', 'orange'];
const [a, ...b] = myFruits;

console.log(a);
console.log(b);
Output:apple
        [ 'banana', 'orange' ]
Description: Here it is reassign the values of myFruit array to make another array which has only 2 values. One is a = apple and b takes the rest values and make an array.
8) Quiz 8
Code:
printMe();
function printMe(){
  console.log("hello from function");
}

var obj = new PrintMeToo();
obj.printMe();

class PrintMeToo{
  printMe(){
    console.log("hello from class");
  }   
}
Output:ReferenceError: Cannot access 'PrintMeToo' before initialization
        hello from function
Description: When the code executed first printMe function execute, so console.log("hello from function"); executed. Then an object is created before defininig the class. so it gives an error.