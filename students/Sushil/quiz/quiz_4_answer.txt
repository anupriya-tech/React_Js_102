
  
what is the difference between Spread Operator and Rest operator?
Rest Parameter is collecting all remaining elements into an array . Spread Operator is unpacking collected elements such as arrays into single elements
The rest operator (…) allows us to call a function with any number of arguments and then access those excess arguments as an array. The rest operator also allows us in destructuring array or objects. The spread operator (…) allows us to expand an iterable like array into its individual elements.

Difference Between Shallow Copy and Deep Copy?
Shallow Copy: Simply makes a copy of the reference to A into B. Think about it as a copy of A's Address. So, the addresses of A and B will be the same i.e. they will be pointing to the same memory location i.e. data contents.

Deep copy: Simply makes a copy of all the members of A, allocates memory in a different location for B and then assigns the copied members to B to achieve deep copy. In this way, if A becomes non-existant B is still valid in the memory. The correct term to use would be cloning, where you know that they both are totally the same, but yet different (i.e. stored as two different 
entities in the memory space). You can also provide your clone wrapper where you can decide via inclusion/exclusion list which properties to select during deep copy. This is quite a common practice when you create APIs.
what is prototype?in es5 nd es6
Prototypes are the mechanism by which JavaScript objects inherit features from one another. 
ES5 Syntax
Prototype and prototypal Inheritance: We have looked at how object constructor is written in ES5 syntax now let's look at what an object prototype is. Syntax:
function Dog(name, age){
 // Properties
  this.name = name;
  this.age = age;

 // Method
  this.canBark = function(){
    if(this.age => '180 days'){
       return 'YES';
    } else{
      return 'NO';
    }
  }
}
ES6 Syntax
Classes in ES6 is same as Object constructor function in ES5 under the hood that means both work in the same way just that ES6 has a much better syntax which one of my favorite tutor(Brad Traversy) calls "syntactic sugar" and also methods are directly made prototypes(made accessible to all instances of the Class). Now let's dive in ES6 classes.
Declaring an ES6 class & Constructor:
class Person{
  constructor(firstName, lastName, age){
    this.firstName = firstName;
    this.lastName = lastName;    // PROPERTIES
    this.age = age;
  }

   getAge(){
     return `${this.firstName} ${this.lastName};   // METHOD
   }   
}
