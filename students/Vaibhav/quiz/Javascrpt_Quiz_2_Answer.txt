101) var a = 21; 
var b = function() {
  console.log(a);
  var a = 20;

};
b();

	Output : undefined 
	Explanation  : Because a is defined befor console log inside of function 


102)var student = {
  name: "John",
  getName: function (){
    console.log("student "+this.name);
  }
}
var employee = {
  name: "tom",
  getName: function(){
    console.log("employee "+this.name);
  }
}
var run = student.getName.bind(employee);
run();

	Output : student tom
	Explanation : because Bind method is using with object value.


103)x = 10;
function foo(x){
  x=20;
  delete x;
  return x;
}
console.log(foo(5));

	Output : 20
	Explanation : Because of the delete opeator is used to delete properties from an object. and shwoing local variable value


104)function foo(){
  var a;
  console.log(a);
  a = 10;
}
foo();

	Output : undefined
	Explanation : Because of the varible value is using in that function.


105)function evenodd(n){
  return n%2 != 0;
}
myarray = [1,2,3,4,5];
console.log(myarray.filter(evenodd));

	Output : [ 1, 3, 5 ]
	Explanation : Beacuse of the filter evenodd nuber and we use not equal to.


106) var myArray =['80', '90', 100];
function compare(a, b) {
  return a - b;
}
var a = myArray.sort();
var b = myArray.sort(compare);
console.log (a===b);

	Output : true
	Explanation :


107)myFruits = ['apple', 'banana', 'orange'];
const [a, ...b] = myFruits;
console.log(a);
console.log(b);

	Output : apple [ 'banana', 'orange' ]
	Explanation :


108) printMe();

function printMe(){
  console.log("hello from function.")
}

var obj = new PrintMeToo();
obj.printMe();

class PrintMeToo{
  printMe(){
    console.log("hello from class.")
  }
}

	Output : ReferenceError: Cannot access 'PrintMeToo' before initialization at /script.js:7:11 hello from function.
	Explanation : Because first function calling printMe



   