1) which link open on Goole and why ?

<a href="#" onClick="run();">link-one</a>
<a href="https://www.google.com/" onClick="console.log('link clicked'); return false">link-two</a>

answer : link first open on Google because in second link the return false prevent the default action of the link.

2) what is the output of this code?

var student = {
    name : "John",
    getName : function(){
        console.log("student " + this.name);
    }
};
var employee = {
    name : "Tom",
    getName : function(){
        console.log("employee " + this.name);
    }
}
var run = student.getName.bind(employee);

run();

answer: student Tom.

3) what is output of foo() function?
 var x = 10;
  function foo(x){
   x= 20;
   delete x ;
   return x;
  }
  console.log(foo(5));


answer : 20, because x is initialized again ih function foo().

4) what is the output of foo function?

function foo(){
   var x;
   console.log(x);
   x =10;

   };
   
 foo();  
   
answer : undefiend, because due to variable hoisting and
only variable declaration part is hoisted not initialiazation part and
the initialization is written after console.log function.

5) what is the output of evenodd function?
answer : not sure.

6) what is output of sort-compare function?

var myArray = ['80', '90', '100'];
 function compare(a, b){
   return a-b;
 }
 var a = myArray.sort();
 var b = myArray.sort(compare);
 console.log(a === b);
 
answer : true but listing is diffrent.

7) what is the output of this ?

myfruits = ['apple', ' banana', 'mango'];
const [a, ...b] = myfruits;

console.log(a);
console.log(b)

answer : console.log(a)= apple and console.log(b) = ['banana' , 'orange'];

8) what is the output ?

printme();

function printme(){
    console.log("hello from function")
}

var obj = new printMeTo();
obj.printme();

class printMeTo {
    printme() {
        console.log("hello from class");
    };
}

answer : "hello from function" and 
printmeto cannot access before initialization. 

9) const magic = 42;
   const theAnswer = magic;
   const theQa = good;
   const everything = new Set([magic, theAnswer]);

   console.log(everything.size);

answer : 1, because in Set where each value is occure only once. 

10) let x = 10;
    let y = x%4;
    let z = y/2;
    let c = x * z;
    
    alert(x);

    answer : 10;

11) var a = 21;

    var b = function() {
    console.log(a);
    var a = 20;
};
b();
answer : undefined